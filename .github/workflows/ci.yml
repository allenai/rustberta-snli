name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v2

    - name: Install rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true

    - name: Set build variables
      shell: bash
      run: |
        # We use these variables as part of the cache keys.
        echo "RUST_VERSION=$(rustc --version)" >> $GITHUB_ENV
        echo "WEEK_NUMBER=$(date +%U)" >> $GITHUB_ENV

    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: cargo registry ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ hashFiles('**/Cargo.toml') }} ${{ env.WEEK_NUMBER }}

    - name: Cache cargo build
      uses: actions/cache@v2
      with:
        path: target
        key: cargo build ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ hashFiles('**/Cargo.toml') }} ${{ env.WEEK_NUMBER }}

    - name: Test
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: test

    - name: Build
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: run -- --help

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Install rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        components: rustfmt, clippy
        override: true

    - name: Set build variables
      shell: bash
      run: |
        # We use these variables as part of the cache keys.
        echo "RUST_VERSION=$(rustc --version)" >> $GITHUB_ENV
        echo "WEEK_NUMBER=$(date +%U)" >> $GITHUB_ENV

    - name: Cache cargo registry
      uses: actions/cache@v2
      with:
        path: ~/.cargo/registry
        key: cargo registry ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ hashFiles('**/Cargo.toml') }} ${{ env.WEEK_NUMBER }}

    - name: Cache cargo build
      uses: actions/cache@v2
      with:
        path: target
        key: cargo build ${{ github.job }} ${{ runner.os }} ${{ env.RUST_VERSION }} ${{ hashFiles('**/Cargo.toml') }} ${{ env.WEEK_NUMBER }}

    - name: Lint with rustfmt
      uses: actions-rs/cargo@v1
      with:
        command: fmt
        args: -- --check

    - name: Lint with clippy
      if: always()
      uses: actions-rs/cargo@v1
      with:
        command: clippy
        args: --all-targets --all-features -- -D warnings
